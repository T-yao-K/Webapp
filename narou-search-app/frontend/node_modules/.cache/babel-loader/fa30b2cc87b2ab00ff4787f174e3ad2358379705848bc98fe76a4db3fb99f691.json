{"ast":null,"code":"var _jsxFileName = \"/app/src/components/Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  const [novels, setNovels] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [options, setOptions] = useState([]);\n  const [result, setResult] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [genre, setGenre] = useState('');\n  const fetchQuizData = async () => {\n    setLoading(true);\n    setError('');\n    setResult('');\n    try {\n      const response = await fetch('http://localhost:8000/quiz');\n      const data = await response.json();\n      if (data.error) {\n        throw new Error(data.error);\n      }\n      setNovels(data.novels);\n      setGenre(data.genre);\n      setCurrentQuestionIndex(0);\n      setNewQuestion(data.novels, 0);\n    } catch (error) {\n      setError('クイズデータの取得に失敗しました: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const setNewQuestion = (novelsData, index) => {\n    const currentNovel = novelsData[index];\n    const otherNovels = novelsData.filter((_, idx) => idx !== index);\n    const randomNovels = otherNovels.sort(() => 0.5 - Math.random()).slice(0, 2);\n    setOptions([currentNovel, ...randomNovels].sort(() => 0.5 - Math.random()));\n  };\n  useEffect(() => {\n    fetchQuizData();\n  }, []);\n  const handleAnswer = selectedNcode => {\n    const currentNovel = novels[currentQuestionIndex];\n    if (selectedNcode === currentNovel.ncode) {\n      setResult('正解！');\n    } else {\n      setResult('不正解... もう一度選んでください。');\n    }\n  };\n  const handleNextQuestion = () => {\n    if (currentQuestionIndex < novels.length - 1) {\n      const nextIndex = currentQuestionIndex + 1;\n      setCurrentQuestionIndex(nextIndex);\n      setNewQuestion(novels, nextIndex);\n      setResult('');\n    } else {\n      fetchQuizData(); // すべての問題を使い切ったら新しい問題セットを取得\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\u8AAD\\u307F\\u8FBC\\u307F\\u4E2D...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 21\n  }, this);\n  if (novels.length === 0) return null;\n  const currentNovel = novels[currentQuestionIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u5C0F\\u8AAC\\u30AF\\u30A4\\u30BA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"genre\",\n      children: [\"\\u30B8\\u30E3\\u30F3\\u30EB: \", genre]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"story\",\n      children: currentNovel.story\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options\",\n      children: options.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAnswer(option.ncode),\n        disabled: result === '正解！',\n        children: option.title\n      }, option.ncode, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), result === '正解！' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNextQuestion,\n          children: \"\\u6B21\\u306E\\u554F\\u984C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: currentNovel.url,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"\\u3053\\u306E\\u5C0F\\u8AAC\\u3092\\u8AAD\\u3080\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"BzmX9+jVFb8PAEQLuWghQ8R3CA4=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Quiz","_s","novels","setNovels","currentQuestionIndex","setCurrentQuestionIndex","options","setOptions","result","setResult","loading","setLoading","error","setError","genre","setGenre","fetchQuizData","response","fetch","data","json","Error","setNewQuestion","message","novelsData","index","currentNovel","otherNovels","filter","_","idx","randomNovels","sort","Math","random","slice","handleAnswer","selectedNcode","ncode","handleNextQuestion","length","nextIndex","children","fileName","_jsxFileName","lineNumber","columnNumber","className","story","map","option","onClick","disabled","title","href","url","target","rel","_c","$RefreshReg$"],"sources":["/app/src/components/Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Quiz = () => {\n  const [novels, setNovels] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [options, setOptions] = useState([]);\n  const [result, setResult] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [genre, setGenre] = useState('');\n\n  const fetchQuizData = async () => {\n    setLoading(true);\n    setError('');\n    setResult('');\n    try {\n      const response = await fetch('http://localhost:8000/quiz');\n      const data = await response.json();\n      if (data.error) {\n        throw new Error(data.error);\n      }\n      setNovels(data.novels);\n      setGenre(data.genre);\n      setCurrentQuestionIndex(0);\n      setNewQuestion(data.novels, 0);\n    } catch (error) {\n      setError('クイズデータの取得に失敗しました: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const setNewQuestion = (novelsData, index) => {\n    const currentNovel = novelsData[index];\n    const otherNovels = novelsData.filter((_, idx) => idx !== index);\n    const randomNovels = otherNovels.sort(() => 0.5 - Math.random()).slice(0, 2);\n    setOptions([currentNovel, ...randomNovels].sort(() => 0.5 - Math.random()));\n  };\n\n  useEffect(() => {\n    fetchQuizData();\n  }, []);\n\n  const handleAnswer = (selectedNcode) => {\n    const currentNovel = novels[currentQuestionIndex];\n    if (selectedNcode === currentNovel.ncode) {\n      setResult('正解！');\n    } else {\n      setResult('不正解... もう一度選んでください。');\n    }\n  };\n\n  const handleNextQuestion = () => {\n    if (currentQuestionIndex < novels.length - 1) {\n      const nextIndex = currentQuestionIndex + 1;\n      setCurrentQuestionIndex(nextIndex);\n      setNewQuestion(novels, nextIndex);\n      setResult('');\n    } else {\n      fetchQuizData(); // すべての問題を使い切ったら新しい問題セットを取得\n    }\n  };\n\n  if (loading) return <p>読み込み中...</p>;\n  if (error) return <p>{error}</p>;\n  if (novels.length === 0) return null;\n\n  const currentNovel = novels[currentQuestionIndex];\n\n  return (\n    <div className=\"quiz-container\">\n      <h2>小説クイズ</h2>\n      <p className=\"genre\">ジャンル: {genre}</p>\n      <p className=\"story\">{currentNovel.story}</p>\n      <div className=\"options\">\n        {options.map((option) => (\n          <button\n            key={option.ncode}\n            onClick={() => handleAnswer(option.ncode)}\n            disabled={result === '正解！'}\n          >\n            {option.title}\n          </button>\n        ))}\n      </div>\n      {result && (\n        <div className=\"result\">\n          <p>{result}</p>\n          {result === '正解！' && (\n            <>\n              <button onClick={handleNextQuestion}>次の問題</button>\n              <a href={currentNovel.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                <button>この小説を読む</button>\n              </a>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Quiz;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACnE,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACc,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACoB,KAAK,EAAEC,QAAQ,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMsB,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChCL,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,EAAE,CAAC;IACZJ,SAAS,CAAC,EAAE,CAAC;IACb,IAAI;MACF,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAA4B,CAAC;MAC1D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClC,IAAID,IAAI,CAACP,KAAK,EAAE;QACd,MAAM,IAAIS,KAAK,CAACF,IAAI,CAACP,KAAK,CAAC;MAC7B;MACAT,SAAS,CAACgB,IAAI,CAACjB,MAAM,CAAC;MACtBa,QAAQ,CAACI,IAAI,CAACL,KAAK,CAAC;MACpBT,uBAAuB,CAAC,CAAC,CAAC;MAC1BiB,cAAc,CAACH,IAAI,CAACjB,MAAM,EAAE,CAAC,CAAC;IAChC,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdC,QAAQ,CAAC,oBAAoB,GAAGD,KAAK,CAACW,OAAO,CAAC;IAChD,CAAC,SAAS;MACRZ,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMW,cAAc,GAAGA,CAACE,UAAU,EAAEC,KAAK,KAAK;IAC5C,MAAMC,YAAY,GAAGF,UAAU,CAACC,KAAK,CAAC;IACtC,MAAME,WAAW,GAAGH,UAAU,CAACI,MAAM,CAAC,CAACC,CAAC,EAAEC,GAAG,KAAKA,GAAG,KAAKL,KAAK,CAAC;IAChE,MAAMM,YAAY,GAAGJ,WAAW,CAACK,IAAI,CAAC,MAAM,GAAG,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IAC5E5B,UAAU,CAAC,CAACmB,YAAY,EAAE,GAAGK,YAAY,CAAC,CAACC,IAAI,CAAC,MAAM,GAAG,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;EAC7E,CAAC;EAEDvC,SAAS,CAAC,MAAM;IACdqB,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMoB,YAAY,GAAIC,aAAa,IAAK;IACtC,MAAMX,YAAY,GAAGxB,MAAM,CAACE,oBAAoB,CAAC;IACjD,IAAIiC,aAAa,KAAKX,YAAY,CAACY,KAAK,EAAE;MACxC7B,SAAS,CAAC,KAAK,CAAC;IAClB,CAAC,MAAM;MACLA,SAAS,CAAC,qBAAqB,CAAC;IAClC;EACF,CAAC;EAED,MAAM8B,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,IAAInC,oBAAoB,GAAGF,MAAM,CAACsC,MAAM,GAAG,CAAC,EAAE;MAC5C,MAAMC,SAAS,GAAGrC,oBAAoB,GAAG,CAAC;MAC1CC,uBAAuB,CAACoC,SAAS,CAAC;MAClCnB,cAAc,CAACpB,MAAM,EAAEuC,SAAS,CAAC;MACjChC,SAAS,CAAC,EAAE,CAAC;IACf,CAAC,MAAM;MACLO,aAAa,CAAC,CAAC,CAAC,CAAC;IACnB;EACF,CAAC;EAED,IAAIN,OAAO,EAAE,oBAAOb,OAAA;IAAA6C,QAAA,EAAG;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EACnC,IAAIlC,KAAK,EAAE,oBAAOf,OAAA;IAAA6C,QAAA,EAAI9B;EAAK;IAAA+B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAChC,IAAI5C,MAAM,CAACsC,MAAM,KAAK,CAAC,EAAE,OAAO,IAAI;EAEpC,MAAMd,YAAY,GAAGxB,MAAM,CAACE,oBAAoB,CAAC;EAEjD,oBACEP,OAAA;IAAKkD,SAAS,EAAC,gBAAgB;IAAAL,QAAA,gBAC7B7C,OAAA;MAAA6C,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdjD,OAAA;MAAGkD,SAAS,EAAC,OAAO;MAAAL,QAAA,GAAC,4BAAM,EAAC5B,KAAK;IAAA;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtCjD,OAAA;MAAGkD,SAAS,EAAC,OAAO;MAAAL,QAAA,EAAEhB,YAAY,CAACsB;IAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7CjD,OAAA;MAAKkD,SAAS,EAAC,SAAS;MAAAL,QAAA,EACrBpC,OAAO,CAAC2C,GAAG,CAAEC,MAAM,iBAClBrD,OAAA;QAEEsD,OAAO,EAAEA,CAAA,KAAMf,YAAY,CAACc,MAAM,CAACZ,KAAK,CAAE;QAC1Cc,QAAQ,EAAE5C,MAAM,KAAK,KAAM;QAAAkC,QAAA,EAE1BQ,MAAM,CAACG;MAAK,GAJRH,MAAM,CAACZ,KAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKX,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EACLtC,MAAM,iBACLX,OAAA;MAAKkD,SAAS,EAAC,QAAQ;MAAAL,QAAA,gBACrB7C,OAAA;QAAA6C,QAAA,EAAIlC;MAAM;QAAAmC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACdtC,MAAM,KAAK,KAAK,iBACfX,OAAA,CAAAE,SAAA;QAAA2C,QAAA,gBACE7C,OAAA;UAAQsD,OAAO,EAAEZ,kBAAmB;UAAAG,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAClDjD,OAAA;UAAGyD,IAAI,EAAE5B,YAAY,CAAC6B,GAAI;UAACC,MAAM,EAAC,QAAQ;UAACC,GAAG,EAAC,qBAAqB;UAAAf,QAAA,eAClE7C,OAAA;YAAA6C,QAAA,EAAQ;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvB,CAAC;MAAA,eACJ,CACH;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC7C,EAAA,CAlGID,IAAI;AAAA0D,EAAA,GAAJ1D,IAAI;AAoGV,eAAeA,IAAI;AAAC,IAAA0D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
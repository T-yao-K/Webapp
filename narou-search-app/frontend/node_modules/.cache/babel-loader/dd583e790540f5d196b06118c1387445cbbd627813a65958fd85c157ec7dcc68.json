{"ast":null,"code":"var _jsxFileName = \"/app/src/components/Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  const [quizData, setQuizData] = useState(null);\n  const [result, setResult] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const fetchQuizData = async () => {\n    setLoading(true);\n    setError('');\n    setResult('');\n    try {\n      const response = await fetch('http://localhost:8000/quiz');\n      const data = await response.json();\n      if (data.error) {\n        throw new Error(data.error);\n      }\n      setQuizData(data);\n    } catch (error) {\n      setError('クイズデータの取得に失敗しました: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchQuizData();\n  }, []);\n  const handleAnswer = selectedNcode => {\n    if (selectedNcode === quizData.correct_ncode) {\n      setResult('正解！');\n    } else {\n      setResult('不正解...');\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\u8AAD\\u307F\\u8FBC\\u307F\\u4E2D...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 21\n  }, this);\n  if (!quizData) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u5C0F\\u8AAC\\u30AF\\u30A4\\u30BA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"story\",\n      children: quizData.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options\",\n      children: quizData.options.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAnswer(option.ncode),\n        disabled: result !== '',\n        children: option.title\n      }, option.ncode, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), result === '正解！' && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchQuizData,\n        children: \"\\u6B21\\u306E\\u554F\\u984C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"2XLa0Mp8INX1MQ61Wp2PeMOEXII=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Quiz","_s","quizData","setQuizData","result","setResult","loading","setLoading","error","setError","fetchQuizData","response","fetch","data","json","Error","message","handleAnswer","selectedNcode","correct_ncode","children","fileName","_jsxFileName","lineNumber","columnNumber","className","question","options","map","option","onClick","ncode","disabled","title","_c","$RefreshReg$"],"sources":["/app/src/components/Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Quiz = () => {\n  const [quizData, setQuizData] = useState(null);\n  const [result, setResult] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  const fetchQuizData = async () => {\n    setLoading(true);\n    setError('');\n    setResult('');\n    try {\n      const response = await fetch('http://localhost:8000/quiz');\n      const data = await response.json();\n      if (data.error) {\n        throw new Error(data.error);\n      }\n      setQuizData(data);\n    } catch (error) {\n      setError('クイズデータの取得に失敗しました: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchQuizData();\n  }, []);\n\n  const handleAnswer = (selectedNcode) => {\n    if (selectedNcode === quizData.correct_ncode) {\n      setResult('正解！');\n    } else {\n      setResult('不正解...');\n    }\n  };\n\n  if (loading) return <p>読み込み中...</p>;\n  if (error) return <p>{error}</p>;\n  if (!quizData) return null;\n\n  return (\n    <div className=\"quiz-container\">\n      <h2>小説クイズ</h2>\n      <p className=\"story\">{quizData.question}</p>\n      <div className=\"options\">\n        {quizData.options.map((option) => (\n          <button\n            key={option.ncode}\n            onClick={() => handleAnswer(option.ncode)}\n            disabled={result !== ''}\n          >\n            {option.title}\n          </button>\n        ))}\n      </div>\n      {result && (\n        <div className=\"result\">\n          <p>{result}</p>\n          {result === '正解！' && (\n            <button onClick={fetchQuizData}>次の問題</button>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Quiz;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
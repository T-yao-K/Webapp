{"ast":null,"code":"var _jsxFileName = \"/app/src/components/Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  const [novels, setNovels] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [options, setOptions] = useState([]);\n  const [result, setResult] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const fetchQuizData = async () => {\n    setLoading(true);\n    setError('');\n    setResult('');\n    try {\n      const response = await fetch('http://localhost:8000/quiz');\n      const data = await response.json();\n      if (data.error) {\n        throw new Error(data.error);\n      }\n      setNovels(data.novels);\n      setCurrentQuestionIndex(0);\n      setNewQuestion(data.novels);\n    } catch (error) {\n      setError('クイズデータの取得に失敗しました: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const setNewQuestion = novelsData => {\n    const currentNovel = novelsData[currentQuestionIndex];\n    const otherNovels = novelsData.filter((_, index) => index !== currentQuestionIndex);\n    const randomNovels = otherNovels.sort(() => 0.5 - Math.random()).slice(0, 2);\n    setOptions([currentNovel, ...randomNovels].sort(() => 0.5 - Math.random()));\n  };\n  useEffect(() => {\n    fetchQuizData();\n  }, []);\n  const handleAnswer = selectedNcode => {\n    const currentNovel = novels[currentQuestionIndex];\n    if (selectedNcode === currentNovel.ncode) {\n      setResult('正解！');\n    } else {\n      setResult('不正解... もう一度選んでください。');\n    }\n  };\n  const handleNextQuestion = () => {\n    if (currentQuestionIndex < novels.length - 1) {\n      setCurrentQuestionIndex(prevIndex => prevIndex + 1);\n      setNewQuestion(novels);\n      setResult('');\n    } else {\n      fetchQuizData(); // すべての問題を使い切ったら新しい問題セットを取得\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\u8AAD\\u307F\\u8FBC\\u307F\\u4E2D...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 21\n  }, this);\n  if (novels.length === 0) return null;\n  const currentNovel = novels[currentQuestionIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u5C0F\\u8AAC\\u30AF\\u30A4\\u30BA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"story\",\n      children: currentNovel.story\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options\",\n      children: options.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAnswer(option.ncode),\n        disabled: result === '正解！',\n        children: option.title\n      }, option.ncode, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), result === '正解！' && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextQuestion,\n        children: \"\\u6B21\\u306E\\u554F\\u984C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"5QDO7H4r1iNH7yLeJpZwVFHVThs=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Quiz","_s","novels","setNovels","currentQuestionIndex","setCurrentQuestionIndex","options","setOptions","result","setResult","loading","setLoading","error","setError","fetchQuizData","response","fetch","data","json","Error","setNewQuestion","message","novelsData","currentNovel","otherNovels","filter","_","index","randomNovels","sort","Math","random","slice","handleAnswer","selectedNcode","ncode","handleNextQuestion","length","prevIndex","children","fileName","_jsxFileName","lineNumber","columnNumber","className","story","map","option","onClick","disabled","title","_c","$RefreshReg$"],"sources":["/app/src/components/Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Quiz = () => {\n  const [novels, setNovels] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [options, setOptions] = useState([]);\n  const [result, setResult] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  const fetchQuizData = async () => {\n    setLoading(true);\n    setError('');\n    setResult('');\n    try {\n      const response = await fetch('http://localhost:8000/quiz');\n      const data = await response.json();\n      if (data.error) {\n        throw new Error(data.error);\n      }\n      setNovels(data.novels);\n      setCurrentQuestionIndex(0);\n      setNewQuestion(data.novels);\n    } catch (error) {\n      setError('クイズデータの取得に失敗しました: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const setNewQuestion = (novelsData) => {\n    const currentNovel = novelsData[currentQuestionIndex];\n    const otherNovels = novelsData.filter((_, index) => index !== currentQuestionIndex);\n    const randomNovels = otherNovels.sort(() => 0.5 - Math.random()).slice(0, 2);\n    setOptions([currentNovel, ...randomNovels].sort(() => 0.5 - Math.random()));\n  };\n\n  useEffect(() => {\n    fetchQuizData();\n  }, []);\n\n  const handleAnswer = (selectedNcode) => {\n    const currentNovel = novels[currentQuestionIndex];\n    if (selectedNcode === currentNovel.ncode) {\n      setResult('正解！');\n    } else {\n      setResult('不正解... もう一度選んでください。');\n    }\n  };\n\n  const handleNextQuestion = () => {\n    if (currentQuestionIndex < novels.length - 1) {\n      setCurrentQuestionIndex(prevIndex => prevIndex + 1);\n      setNewQuestion(novels);\n      setResult('');\n    } else {\n      fetchQuizData(); // すべての問題を使い切ったら新しい問題セットを取得\n    }\n  };\n\n  if (loading) return <p>読み込み中...</p>;\n  if (error) return <p>{error}</p>;\n  if (novels.length === 0) return null;\n\n  const currentNovel = novels[currentQuestionIndex];\n\n  return (\n    <div className=\"quiz-container\">\n      <h2>小説クイズ</h2>\n      <p className=\"story\">{currentNovel.story}</p>\n      <div className=\"options\">\n        {options.map((option) => (\n          <button\n            key={option.ncode}\n            onClick={() => handleAnswer(option.ncode)}\n            disabled={result === '正解！'}\n          >\n            {option.title}\n          </button>\n        ))}\n      </div>\n      {result && (\n        <div className=\"result\">\n          <p>{result}</p>\n          {result === '正解！' && (\n            <button onClick={handleNextQuestion}>次の問題</button>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Quiz;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
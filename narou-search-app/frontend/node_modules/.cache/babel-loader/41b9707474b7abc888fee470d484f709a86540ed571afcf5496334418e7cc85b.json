{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst useFetchGenres = () => {\n  _s();\n  const [genres, setGenres] = useState({});\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchGenres = async () => {\n      try {\n        const backendUrl = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n        const response = await fetch(`${backendUrl}/genres`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch genres');\n        }\n        const data = await response.json();\n        setGenres(data);\n      } catch (error) {\n        console.error('Error fetching genres:', error);\n        setError('ジャンル一覧の取得に失敗しました');\n      }\n    };\n    fetchGenres();\n  }, []);\n  return {\n    genres,\n    error\n  };\n};\n_s(useFetchGenres, \"DxO3SxBit0AuTGBsCavn233iPoY=\");\nexport default useFetchGenres;","map":{"version":3,"names":["useState","useEffect","useFetchGenres","_s","genres","setGenres","error","setError","fetchGenres","backendUrl","process","env","REACT_APP_API_URL","response","fetch","ok","Error","data","json","console"],"sources":["/app/src/hooks/useFetchGenres.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useFetchGenres = () => {\n  const [genres, setGenres] = useState({});\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchGenres = async () => {\n      try {\n        const backendUrl = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n        const response = await fetch(`${backendUrl}/genres`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch genres');\n        }\n        const data = await response.json();\n        setGenres(data);\n      } catch (error) {\n        console.error('Error fetching genres:', error);\n        setError('ジャンル一覧の取得に失敗しました');\n      }\n    };\n\n    fetchGenres();\n  }, []);\n\n  return { genres, error };\n};\n\nexport default useFetchGenres;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMO,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,UAAU,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;QAC3E,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,UAAU,SAAS,CAAC;QACpD,IAAI,CAACI,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;QAC3C;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCb,SAAS,CAACY,IAAI,CAAC;MACjB,CAAC,CAAC,OAAOX,KAAK,EAAE;QACda,OAAO,CAACb,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAC9CC,QAAQ,CAAC,kBAAkB,CAAC;MAC9B;IACF,CAAC;IAEDC,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEJ,MAAM;IAAEE;EAAM,CAAC;AAC1B,CAAC;AAACH,EAAA,CAxBID,cAAc;AA0BpB,eAAeA,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}